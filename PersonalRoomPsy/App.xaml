<Application x:Class="PersonalRoomPsy.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PersonalRoomPsy"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>

                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <!-- Theme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />

                <ResourceDictionary>
                    <Style x:Key="TextBlockStyle1" TargetType="TextBlock">
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Style>

                    <Style x:Key="TextBlockStyle2" TargetType="TextBlock">
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="TextAlignment" Value="Center"/>
                    </Style>

                    <Style x:Key="CustomTextBoxStyle" TargetType="TextBox">
                        <Setter Property="Background" Value="#4f4c5f"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Comfortaa"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="4">
                                        <ScrollViewer x:Name="PART_ContentHost" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="CustompasswordBoxStyle" TargetType="PasswordBox">
                        <Setter Property="Background" Value="#4f4c5f"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Comfortaa"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="PasswordBox">
                                    <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="4">
                                        <ScrollViewer x:Name="PART_ContentHost" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="CustomButtonStyle1" TargetType="Button">
                        <Setter Property="Background" Value="#7961f1"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                        CornerRadius="4">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#6753cc"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="CustomButtonStyleNO" TargetType="Button">
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                    CornerRadius="4">
                                        <ContentPresenter HorizontalAlignment="Center" 
                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#6753cc"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="CustomButtonStyleYES" TargetType="Button">
                        <Setter Property="Background" Value="#1DD300"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                    CornerRadius="4">
                                        <ContentPresenter HorizontalAlignment="Center" 
                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#6753cc"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="CustomButtonStyleMB" TargetType="Button">
                        <Setter Property="Background" Value="Gray"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                        CornerRadius="4">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#6753cc"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="IconButtonStyle1" TargetType="Button">
                        <Setter Property="Width" Value="70"/>
                        <Setter Property="Height" Value="70"/>
                        <Setter Property="Margin" Value="20,0,0,0"/>
                        <Setter Property="Background" Value="#7961f1"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderBrush="Transparent"
                                BorderThickness="0">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#6753cc"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="White"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid>
                                        <Ellipse Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2"/>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#7961f1"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="IconButtonStyle3" TargetType="Button">
                        <Setter Property="Width" Value="70"/>
                        <Setter Property="Height" Value="70"/>
                        <Setter Property="Margin" Value="20,0,0,0"/>
                        <Setter Property="Background" Value="Red"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
            CornerRadius="4"
            BorderBrush="Transparent"
            BorderThickness="0">
                                        <ContentPresenter HorizontalAlignment="Center" 
                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#6753cc"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style TargetType="Hyperlink" x:Key="CustomHyperlinkStyle1">
                        <Setter Property="Foreground" Value="#6753cc"/>
                        <Setter Property="TextDecorations" Value="{x:Null}"/>
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="CustomCheckBoxStyle1" TargetType="CheckBox">
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Foreground" Value="white"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="CheckBox">
                                    <StackPanel Orientation="Horizontal">
                                        <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                                            <BulletDecorator.Bullet>
                                                <Grid Width="20" Height="20">
                                                    <Border x:Name="OuterSquare"
                                        BorderBrush="#7961f1"
                                        BorderThickness="2"
                                        Background="Transparent"
                                        CornerRadius="4"/>
                                                    <Border x:Name="InnerSquare"
                                        Background="Transparent"
                                        Width="10"
                                        Height="10"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        CornerRadius="2"/>
                                                </Grid>
                                            </BulletDecorator.Bullet>
                                            <ContentPresenter VerticalAlignment="Center" Margin="5,0,0,0"/>
                                        </BulletDecorator>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="InnerSquare" Property="Background" Value="#7961f1"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="OuterSquare" Property="BorderBrush" Value="Gray"/>
                                            <Setter TargetName="InnerSquare" Property="Background" Value="Gray"/>
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="CustomRadioButtonStyle" TargetType="RadioButton">
                        <Setter Property="FontFamily" Value="Blogger Sans"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Foreground" Value="white"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RadioButton">
                                    <StackPanel Orientation="Horizontal">
                                        <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                                            <BulletDecorator.Bullet>
                                                <Grid Width="20" Height="20">
                                                    <Ellipse x:Name="OuterCircle" 
                                         Stroke="#7961f1" 
                                         StrokeThickness="2" 
                                         Fill="Transparent"/>
                                                    <Ellipse x:Name="InnerCircle" 
                                         Fill="Transparent" 
                                         Width="10" 
                                         Height="10" 
                                         HorizontalAlignment="Center" 
                                         VerticalAlignment="Center"/>
                                                </Grid>
                                            </BulletDecorator.Bullet>
                                        </BulletDecorator>
                                        <ContentPresenter VerticalAlignment="Center" Margin="5,0,0,0"/>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="InnerCircle" Property="Fill" Value="#7961f1"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="OuterCircle" Property="Stroke" Value="Gray"/>
                                            <Setter TargetName="InnerCircle" Property="Fill" Value="Gray"/>
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="4,2,0,2" />
                                <Path Grid.Column="1" Margin="3,0,3,0" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{TemplateBinding Foreground}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#6D6A7A"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#6D6A7A"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#AAAAAA"/>
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <!-- Стиль для ComboBoxItem -->
                    <Style x:Key="CustomComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="Background" Value="#545163"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="4,2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border 
                            x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="4">
                                        <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="#6D6A7A"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- Стиль для ComboBox -->
                    <Style x:Key="CustomComboBox" TargetType="{x:Type ComboBox}">
                        <Setter Property="Background" Value="#545163"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontSize" Value="20"/>
                        <Setter Property="BorderBrush" Value="#545163"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="4,2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                    <Grid>
                                        <ToggleButton 
            x:Name="ToggleButton" 
            Template="{StaticResource ComboBoxToggleButton}" 
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}" 
            Foreground="{TemplateBinding Foreground}" 
            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
            ClickMode="Press">
                                            <ContentPresenter
                Name="ContentSite"
                IsHitTestVisible="False"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Margin="3,3,23,3" />
                                        </ToggleButton>
                                        <Popup 
            x:Name="Popup" 
            IsOpen="{TemplateBinding IsDropDownOpen}" 
            Placement="Bottom"
            PlacementTarget="{Binding ElementName=ToggleButton}" 
            Width="{Binding ActualWidth, ElementName=ToggleButton}">
                                            <Border 
                x:Name="DropDownBorder"
                CornerRadius="4"
                Background="#545163" 
                BorderBrush="Black" 
                BorderThickness="1">
                                                <ScrollViewer 
                    x:Name="ScrollViewer" 
                    HorizontalScrollBarVisibility="Auto" 
                    VerticalScrollBarVisibility="Auto" 
                    CanContentScroll="True">
                                                    <StackPanel 
                        IsItemsHost="True"
                        Background="#545163">
                                                    </StackPanel>
                                                </ScrollViewer>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <!-- Trigger для изменения размера текста при открытии выпадающего списка -->
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter Property="FontSize" Value="16"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style TargetType="ListBox">
                        <Setter Property="Background" Value="#4f4c5f"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBox">
                                    <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0">
                                        <ScrollViewer Focusable="false">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="Margin" Value="10"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border Background="Transparent"
                                CornerRadius="4"
                                BorderBrush="Transparent"
                                Padding="0">
                                                    <ContentPresenter/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style TargetType="ToolTip">
                        <Setter Property="Foreground" Value="White"/>
                    </Style>

                    <!-- Стиль для заголовков колонок DataGrid -->
                    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#4f4c5f"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>

                    <!-- Стиль для строк DataGrid -->
                    <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#4f4c5f"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <!-- Стиль для ячеек DataGrid -->
                    <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#7120ea"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    
                    
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </Application.Resources>
</Application>
